{
    "openapi": "3.0.0",
    "info": {
        "title": "Bookish API Documentation",
        "description": "Laravel Book API with JWT Authentication",
        "contact": {
            "email": "admin@bookish.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000",
            "description": "Bookish API Server"
        }
    ],
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "8e4e3cb7b46126f4696379d3c7eeb4ad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "authorization": {
                                            "properties": {
                                                "token": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user and generate token",
                "operationId": "222b2625838e3c57e017987f73598fda",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "authorization": {
                                            "properties": {
                                                "token": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user and invalidate token",
                "operationId": "ad65cbbd4e9f201619eae184a5961a98",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh authentication token",
                "operationId": "f6409cd8d794404a6410b0767432b0f4",
                "responses": {
                    "200": {
                        "description": "Token successfully refreshed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "authorization": {
                                            "properties": {
                                                "token": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user information",
                "operationId": "8367feff40ba10e43187792cad3132c1",
                "responses": {
                    "200": {
                        "description": "User information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/books": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Get list of books",
                "description": "Display a listing of the resource.",
                "operationId": "9017a3fa89d6636329067c858b27a6fa",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Book"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Books"
                ],
                "summary": "Create a new book",
                "description": "Store a newly created resource in storage.",
                "operationId": "72f82e1cd6f08112323f87053277ca99",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BookRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Book created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Book"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/books/{id}": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Get a book by ID",
                "description": "Display the specified resource.",
                "operationId": "123856ec83e3466396b979a43eb1a15f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of book to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Book"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Book not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Books"
                ],
                "summary": "Update an existing book",
                "description": "Update the specified resource in storage.",
                "operationId": "2fc15aa806ac989f4d2b201b5952714d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of book to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BookRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Book updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Book"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Book not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Books"
                ],
                "summary": "Delete a book",
                "description": "Remove the specified resource from storage.",
                "operationId": "eda12c526d0ccacaecea5f3d8f15d6df",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of book to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Book not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Book": {
                "title": "Book",
                "description": "Book model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID of the book",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "title": "Title",
                        "description": "Title of the book",
                        "type": "string",
                        "example": "The Great Gatsby"
                    },
                    "author": {
                        "title": "Author",
                        "description": "Author of the book",
                        "type": "string",
                        "example": "F. Scott Fitzgerald"
                    },
                    "publication_year": {
                        "title": "Publication Year",
                        "description": "Year the book was published",
                        "type": "integer",
                        "example": 1925
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Creation date",
                        "format": "datetime",
                        "example": "2023-05-09T12:00:00.000000Z"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Last updated",
                        "format": "datetime",
                        "example": "2023-05-09T12:00:00.000000Z"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Book"
                }
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID of the user",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the User",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email address of the User",
                        "type": "string",
                        "example": "john@example.com"
                    },
                    "email_verified_at": {
                        "title": "Email Verified At",
                        "description": "Date and time when email was verified",
                        "format": "datetime",
                        "example": "2023-05-09T12:00:00.000000Z",
                        "nullable": true
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Creation date",
                        "format": "datetime",
                        "example": "2023-05-09T12:00:00.000000Z"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Last updated",
                        "format": "datetime",
                        "example": "2023-05-09T12:00:00.000000Z"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            },
            "BookRequest": {
                "title": "Book Request",
                "description": "Book request body data",
                "required": [
                    "title",
                    "author",
                    "publication_year"
                ],
                "properties": {
                    "title": {
                        "title": "title",
                        "description": "Title of the book",
                        "type": "string",
                        "example": "The Great Gatsby"
                    },
                    "author": {
                        "title": "author",
                        "description": "Author of the book",
                        "type": "string",
                        "example": "F. Scott Fitzgerald"
                    },
                    "publication_year": {
                        "title": "publication_year",
                        "description": "Year the book was published",
                        "type": "integer",
                        "example": 1925
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "API Endpoints for User Authentication"
        },
        {
            "name": "Books",
            "description": "API Endpoints for Book Management"
        }
    ]
}